CREATE DATABASE EX_TRAN02

USE EX_TRAN02

-- Tabelas de Contas.
CREATE TABLE TB_CONTA (
   NR_AGENCIA INT NOT NULL,
   NR_CONTA INT NOT NULL,
   CPF INT NOT NULL,
   SALDO NUMERIC(10,2),
   PRIMARY KEY (NR_AGENCIA, NR_CONTA)
)

-- Tabela de Lancamentos
/*  TIPO: C - CREDITO
          D - DEBITO

    STATUS: P - PENDENTE. Todos os Lancamentos possuem inicialmente esse status.
            E - EFETUADO. Todos os Lancamentos que já foram efetuados.
            N - NAO EFETUADO. Todos os Lancamentos que não foram efetuados por alguma restricao
                              de negocio. Exemplo: Saldo Insuficiente para Debito.
                              
    MENSAGEM: Mensagem de texto informando a restricao que fez com que o lancamento não fosse 
              efetuado. Exemplo: 'SALDO INSUFICIENTE'
*/

CREATE TABLE TB_LANCAMENTO (
   ID_LANCAMENTO INT NOT NULL IDENTITY(1,1),
   DT_LANCAMENTO DATETIME NOT NULL,
   NR_AGENCIA INT NOT NULL,
   NR_CONTA INT NOT NULL,
   TIPO CHAR(1) CHECK (TIPO IN ('C', 'D')),
   VALOR NUMERIC (10,2),
   STATUS CHAR(1) NULL CHECK (STATUS IN ('P','E','N')),
   MENSAGEM VARCHAR (200) NULL
)

ALTER TABLE TB_LANCAMENTO ADD CONSTRAINT FK_AGENCIA_CONTA
FOREIGN KEY (NR_AGENCIA, NR_CONTA) 
REFERENCES TB_CONTA (NR_AGENCIA, NR_CONTA)

ALTER TABLE TB_LANCAMENTO
ADD CONSTRAINT DF_STATUS DEFAULT ('P') FOR STATUS


CREATE OR ALTER PROCEDURE SP_ATUALIZA_CONTA(@DATA_INICIAL DATETIME, @DATA_FINAL DATETIME) AS
BEGIN
	DECLARE @ID_LANCAMENTO INT,@DT_LANCAMENTO DATETIME, @NR_AGENCIA INT, @NR_CONTA INT, 
	@TIPO CHAR(1), @VALOR NUMERIC(10,2), @STATUS CHAR(1), @MENSAGEM VARCHAR(200)

	DECLARE C_ATT_CONTA CURSOR FOR 
	SELECT * FROM TB_LANCAMENTO WHERE DT_LANCAMENTO IN (@DATA_INICIAL, @DATA_FINAL) AND STATUS = 'P'
	OPEN C_ATT_CONTA
	FETCH C_ATT_CONTA INTO @ID_LANCAMENTO, @DT_LANCAMENTO, @NR_AGENCIA, @NR_CONTA, @TIPO, @VALOR, @STATUS, @MENSAGEM
	WHILE(@@FETCH_STATUS = 0)
	BEGIN
		BEGIN TRANSACTION
			IF @TIPO = 'C'
			BEGIN
				UPDATE TB_CONTA SET SALDO += @VALOR WHERE NR_AGENCIA = @NR_AGENCIA AND NR_CONTA = @NR_CONTA
				UPDATE TB_LANCAMENTO SET STATUS = 'E' WHERE ID_LANCAMENTO = @ID_LANCAMENTO
			END
			ELSE
			BEGIN
				IF EXISTS (SELECT SALDO FROM TB_CONTA WHERE NR_AGENCIA = @NR_AGENCIA AND NR_CONTA = @NR_CONTA AND SALDO >= @VALOR)
				BEGIN
					UPDATE TB_CONTA SET SALDO -= @VALOR WHERE NR_AGENCIA = @NR_AGENCIA AND NR_CONTA = @NR_CONTA
					UPDATE TB_LANCAMENTO SET STATUS = 'E' WHERE ID_LANCAMENTO = @ID_LANCAMENTO
				END
				ELSE
				BEGIN
					UPDATE TB_LANCAMENTO SET STATUS = 'N', MENSAGEM = 'Saldo Insuficiente' WHERE ID_LANCAMENTO = @ID_LANCAMENTO
				END
			END
		COMMIT
		FETCH C_ATT_CONTA INTO @ID_LANCAMENTO, @DT_LANCAMENTO, @NR_AGENCIA, @NR_CONTA, @TIPO, @VALOR, @STATUS, @MENSAGEM
	END
	CLOSE C_ATT_CONTA
	DEALLOCATE C_ATT_CONTA

END


DELETE TB_LANCAMENTO
DELETE TB_CONTA

INSERT INTO TB_CONTA VALUES(1,1,3234245,200),
						   (1,2,234245,200)

INSERT INTO TB_LANCAMENTO VALUES('20220901', 1,1,'D',300,'P',NULL),
								('20220902', 1,2,'C',200,'P',NULL)

SELECT * FROM TB_CONTA
SELECT * FROM TB_LANCAMENTO

EXEC SP_ATUALIZA_CONTA '20220901','20220902'

SELECT * FROM TB_CONTA
SELECT * FROM TB_LANCAMENTO