CREATE DATABASE EX_08

USE EX_08

DROP TABLE TB_CARGO
DROP TABLE TB_ESCOLARIDADE
DROP TABLE TB_FAIXASALARIAL
DROP TABLE TB_FUNCIONARIO
DROP TABLE TB_LOG_FUNCIONARIO

CREATE TABLE TB_CARGO (
 CD_CARGO INT NOT NULL PRIMARY KEY,
 NM_CARGO VARCHAR(50) NOT NULL
)

INSERT INTO TB_CARGO VALUES(1, 'ANALISTA')
INSERT INTO TB_CARGO VALUES(2, 'DBA')
INSERT INTO TB_CARGO VALUES(3, 'PROGRAMADOR')


CREATE TABLE TB_ESCOLARIDADE (
  CD_ESCOLARIDADE INT NOT NULL PRIMARY KEY,
  NM_ESCOLARIDADE VARCHAR(50) NOT NULL
)

INSERT INTO TB_ESCOLARIDADE VALUES (1, 'NÍVEL MÉDIO')
INSERT INTO TB_ESCOLARIDADE VALUES (2, 'NÍVEL SUPERIOR')
INSERT INTO TB_ESCOLARIDADE VALUES (3, 'PÓS-GRADUAÇÃO')

CREATE TABLE TB_FAIXASALARIAL (
  CD_CARGO INT NOT NULL,
  CD_ESCOLARIDADE INT NOT NULL,
  MENOR_VALOR  NUMERIC(10,2) NOT NULL,
  MAIOR_VALOR  NUMERIC(10,2) NOT NULL
  PRIMARY KEY (CD_CARGO, CD_ESCOLARIDADE)
)

INSERT INTO TB_FAIXASALARIAL VALUES(1,1,900.0, 1100.0)
INSERT INTO TB_FAIXASALARIAL VALUES(1,2,1200.0, 1300.0)
INSERT INTO TB_FAIXASALARIAL VALUES(1,3,1400.0, 1500.0)

INSERT INTO TB_FAIXASALARIAL VALUES(2,1,600.0, 700.0)
INSERT INTO TB_FAIXASALARIAL VALUES(2,2,800.0, 1000.0)
INSERT INTO TB_FAIXASALARIAL VALUES(2,3,1100.0, 1500.0)

INSERT INTO TB_FAIXASALARIAL VALUES(3,1,1300.0, 1500.0)
INSERT INTO TB_FAIXASALARIAL VALUES(3,2,2000.0, 2500.0)
INSERT INTO TB_FAIXASALARIAL VALUES(3,3,3000.0, 3500.0)


CREATE TABLE TB_FUNCIONARIO (
  MATRICULA INT NOT NULL PRIMARY KEY,
  NOME VARCHAR(30) NOT NULL,
  CD_CARGO INT REFERENCES TB_CARGO(CD_CARGO), 
  CD_ESCOLARIDADE INT REFERENCES TB_ESCOLARIDADE(CD_ESCOLARIDADE),
  SALARIO NUMERIC (10,2)
)  

CREATE TABLE TB_LOG_FUNCIONARIO (
   MATRICULA INT,
   ERRO VARCHAR(200),
   DATA_ERRO DATETIME
)

CREATE OR ALTER PROCEDURE SP_VERIFICA_SALARIO (@CARGO INT, @ESCOLARIDADE INT, @SALARIO NUMERIC(10,2), @RESPOTA INT OUTPUT) AS
BEGIN
	DECLARE @MENOR_VALOR NUMERIC(10,2), @MAIOR_VALOR NUMERIC(10,2)
	SET @MENOR_VALOR = (SELECT MENOR_VALOR FROM TB_FAIXASALARIAL WHERE CD_CARGO = @CARGO AND CD_ESCOLARIDADE = @ESCOLARIDADE)
	SET @MAIOR_VALOR = (SELECT MAIOR_VALOR FROM TB_FAIXASALARIAL WHERE CD_CARGO = @CARGO AND CD_ESCOLARIDADE = @ESCOLARIDADE)

	IF @SALARIO >= @MENOR_VALOR AND @SALARIO <= @MAIOR_VALOR
	BEGIN
		SET @RESPOTA = 1
		RETURN
	END
	ELSE
	BEGIN
		SET @RESPOTA = 0
	END
END


CREATE OR ALTER PROCEDURE SP_ATUALIZA_LOG as
BEGIN
	DECLARE @MATRICULA INT, @CD_CARGO INT, @CD_ESCOLARIDADE INT, @SALARIO_n NUMERIC(10,2), @SAIDA INT

	DECLARE C_TABELA_CLIENTE CURSOR FOR SELECT MATRICULA, CD_CARGO, CD_ESCOLARIDADE, SALARIO FROM TB_FUNCIONARIO
	OPEN C_TABELA_CLIENTE
	FETCH C_TABELA_CLIENTE INTO @MATRICULA, @CD_CARGO, @CD_ESCOLARIDADE, @SALARIO_n
	WHILE(@@FETCH_STATUS = 0)
	BEGIN
		EXEC SP_VERIFICA_SALARIO @CD_CARGO, @CD_ESCOLARIDADE, @SALARIO_n, @SAIDA OUTPUT
		IF @SAIDA = 0
		BEGIN
			INSERT INTO TB_LOG_FUNCIONARIO VALUES (@MATRICULA, 'Salário inválido - ' + TRIM(STR(@SALARIO_n)), GETDATE())
		END
		FETCH C_TABELA_CLIENTE INTO @MATRICULA, @CD_CARGO, @CD_ESCOLARIDADE, @SALARIO_n
	END
	CLOSE C_TABELA_CLIENTE
	DEALLOCATE C_TABELA_CLIENTE
END

INSERT INTO TB_FUNCIONARIO VALUES(1,'JOSÉ',1,1,3000),(2,'MARÍA',3,3,800),(3,'MILENINHA',2,2,400),(4,'DONA MININHA', 1,1,1000)
SELECT * FROM TB_FUNCIONARIO
SELECT * FROM TB_LOG_FUNCIONARIO

EXEC SP_ATUALIZA_LOG



