use db_procArm

CREATE OR ALTER PROCEDURE SP_AUMENTO_SALARIO (@ANO INT, @SALARIO_ATUAL NUMERIC(10,2), @NOVO_SALARIO NUMERIC(10,2) OUTPUT) AS
BEGIN
 IF @ANO < 2010
  BEGIN
   SET @NOVO_SALARIO = @SALARIO_ATUAL + (@SALARIO_ATUAL * 0.3)
   RETURN
  END
 IF @ANO >= 2010 AND @ANO <= 2015
  BEGIN
   SET @NOVO_SALARIO = @SALARIO_ATUAL + (@SALARIO_ATUAL * 0.2)
   RETURN
  END
 IF @ANO > 2015
  BEGIN
   SET @NOVO_SALARIO = @SALARIO_ATUAL + (@SALARIO_ATUAL * 0.1)
   RETURN
  END
END

DROP TABLE TB_FUNCIONARIO

CREATE TABLE TB_FUNCIONARIO (
	MATRICULA INT NOT NULL PRIMARY KEY,
	NM_FUNCIONARIO VARCHAR(100) NOT NULL,
	ANO_ADMISSAO INT NOT NULL,
	SALARIO NUMERIC(10,2) NOT NULL
)

INSERT INTO TB_FUNCIONARIO VALUES
				(1,'João',2005,100.00),
				(2,'Lucas',2012,100.00),
				(3,'Pedro',2017,100.00)

SELECT * FROM TB_FUNCIONARIO

CREATE OR ALTER PROCEDURE SP_ATUALIZE_SALARIO AS
 BEGIN
  DECLARE @MATRICULA INT, @ANO_ADMISSAO INT, @SALARIO NUMERIC(10,2), @RETORNO_NOVO_SALARIO NUMERIC(10,2)

  DECLARE C_ATUALIZE_SALARIO CURSOR FOR SELECT MATRICULA, ANO_ADMISSAO, SALARIO FROM TB_FUNCIONARIO
  OPEN C_ATUALIZE_SALARIO

  FETCH C_ATUALIZE_SALARIO INTO @MATRICULA, @ANO_ADMISSAO, @SALARIO
  while(@@FETCH_STATUS = 0)
  BEGIN
	EXEC SP_AUMENTO_SALARIO @ANO_ADMISSAO, @SALARIO, @RETORNO_NOVO_SALARIO OUTPUT
	UPDATE TB_FUNCIONARIO SET SALARIO = @RETORNO_NOVO_SALARIO
	WHERE MATRICULA = @MATRICULA
	FETCH C_ATUALIZE_SALARIO INTO @MATRICULA, @ANO_ADMISSAO, @SALARIO
  END
  CLOSE C_ATUALIZE_SALARIO
  DEALLOCATE C_ATUALIZE_SALARIO
 END

 EXEC SP_ATUALIZE_SALARIO
 SELECT * FROM TB_FUNCIONARIO